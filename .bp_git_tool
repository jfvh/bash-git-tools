
# git branch name
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# git autocomplete
if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

# some small git aliasses
alias gclean='git clean -df && git checkout -- .' #remove and clean local changes, go back to head. Use with care :)
alias gstat='git status'
alias gpull='git pull'
alias gcom='git commit -m $1'
alias gadd='git add .'
alias gpush='git push'
alias glog='git log --pretty=format:"%h - %an, %ar : %s"'
alias gdeletebranches="git branch | grep -v "master" | xargs git branch -D"

# select a branch with prompt (used by other functions)
function git_branch_prompt(){
  branch_val=$(git branch --sort=-committerdate)
  ls_val=$(ls| sed 's#/##')
  branches=$(echo ${branch_val[@]} ${ls_val[@]} | tr ' ' '\n' | sort | uniq -u)
  cnt=0
  echo $cnt " - cancel checkout. Stop"
  cnt=$((cnt+1))
  for branch in ${branches[@]}; do
    echo $cnt " - " $branch
    cnt=$((cnt+1))
  done
  read -p "Switch to: " input
  if [ "$input" -eq "0" ]; then
    abort=1;
    return 1;
  fi
  index=$((input-1))
  arr=($branches)
  selected_branch=${arr[$index]}
  abort=0;
  output=$selected_branch
  return 0;
}

function git_get_story_number(){
  branch_name=$(git symbolic-ref -q HEAD)
  story_number=${branch_name##*/}
  output=$story_number;
  return 0;
}

function gce(){
  git_get_story_number;
  if [ "$output" == "master" ]; then
    output="NOJIRA";
  fi
  commit_message="$output kick build - empty commit";
  echo "Empty commit with message: $commit_message";
  git commit --allow-empty -m "$commit_message"
}

function gcs(){
  git_get_story_number;
  if [ "$output" == "master" ]; then
    output="NOJIRA";
  fi
  commit_message="$output $1";
  echo $commit_message;
  git commit -m "$commit_message"
}

function gcheck(){
  git_branch_prompt;
  if [ "$abort" -eq "0" ]; then
    git checkout $output
  fi
}

function gmerge(){
  git_branch_prompt;
  if [ "$abort" -eq "0" ]; then
    git merge $output
  fi
}








